
void win(void)

{
  long lVar1;
  long in_FS_OFFSET;
  
  lVar1 = *(long *)(in_FS_OFFSET + 0x28);
  system("cat flag.txt");
  if (lVar1 != *(long *)(in_FS_OFFSET + 0x28)) {
                    // WARNING: Subroutine does not return
    __stack_chk_fail();
  }
  return;
}



void logo(void)

{
  long lVar1;
  long in_FS_OFFSET;
  
  lVar1 = *(long *)(in_FS_OFFSET + 0x28);
  puts("MMMMMMMMMMMMMMMMMMMMMMMMMWx..cONMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMMMMMMMMMMMXkc..;xNMMMMWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMWN0xollloxOXNKd,.,kNWOccclodkO0XNWWMMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMNkc\'         .:kNXx\'.:0k.       ...,;:lodk0WMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMNx,           ...\'dNMXl.\'do.               .oNMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMW0;          .....  cNMMWk\'.oxl;            \'dNMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMWx.         ...      oWMMMM0,.dXXOl;......,ckXMMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMNo.       ...        \'0MMMMMM0,.;xWMWXK00KXWMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMNo.                  \'OWMMMMMMWk. ,KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMWx.                 .oKWMMMWWNNNXl..oWMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMO\'              .,cxKX0koc:,\'\'\'\'\'.. .:cc:cclodk0XWMMMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMW0l::;;;;;;:cloxOKKOo;..                        ..,cd0NMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMWWWWWWMMMMNOc\'                                  .\'ckNMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMMMXd,                                ..       \'oKWMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMXd\'                                  ..         .oKMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMWk,                                                 \'xNMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMXl.                                         .\'.        cKMMMMMMMMMM");
  puts("MMMMMMMMMMMMK:                                           .\'          ;0MMMMMMMMM");
  puts("MMMMMMMMMMMK:                                                         ,0MMMMMMMM");
  puts("MMMMMMMMMMNc                                                           :XMMMMMMM");
  puts("MMMMMMMMMWx.                                              ..     \'.     oWMMMMMM");
  puts("MMMMMMMMMX;                                                      .      \'0MMMMMM");
  puts("MMMMMMMMMk.                                                             .dWMMMMM");
  puts("MMMMMMMMWo                                                        .      lNMMMMM");
  puts("MMMMMMMMWl                                                        .      :NMMMMM");
  puts("MMMMMMMMWo                                                               cNMMMMM");
  puts("MMMMMMMMMx.                                                              oWMMMMM");
  puts("MMMMMMMMM0\'                                                             .OMMMMMM");
  puts("MMMMMMMMMWl                                                             cNMMMMMM");
  puts("MMMMMMMMMMK,                                                           \'OMMMMMMM");
  puts("MMMMMMMMMMWO\'                                                         .xWMMMMMMM");
  puts("MMMMMMMMMMMWk\'                                                       .xWMMMMMMMM");
  puts("MMMMMMMMMMMMWO,                                                     \'kWMMMMMMMMM");
  puts("MMMMMMMMMMMMMMXl.                                                 .cKWMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMWO;                                               ,kNMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMMNk;.                                          ,xNMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMMMMWOl\'                                     .cONMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMMMMMMMNkl,.                             .\'ckXWMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMMMMMMMMMMN0xl;..                   ..;lx0NMMMMMMMMMMMMMMMMMMMMMM");
  puts("MMMMMMMMMMMMMMMMMMMMMMMMMMMMMWXOo:,..         ..\':okKWMMMMMMMMMMMMMMMMMMMMMMMMMM");
  if (lVar1 != *(long *)(in_FS_OFFSET + 0x28)) {
                    // WARNING: Subroutine does not return
    __stack_chk_fail();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void basket(void)

{
  long in_FS_OFFSET;
  int local_34;
  undefined *local_30;
  undefined *local_28;
  long local_20;
  undefined8 local_18;
  long local_10;
  
  local_10 = *(long *)(in_FS_OFFSET + 0x28);
  printf("\nWhich fruit would you like to eat [0-3] >>> ");
  __isoc99_scanf(&DAT_00402e46,&local_34);
  printf("Replace it with a new fruit.\n",*(undefined8 *)(fruits + (long)local_34 * 8));
  printf("Type of new fruit >>>");
  __isoc99_scanf(&DAT_00402e7d,fruits + (long)local_34 * 8);
  local_30 = &DAT_00404020;
  local_28 = &DAT_00404038;
  local_20 = _DAT_00404020;
  local_18 = _DAT_00404038;
  if ((printf_sym == _DAT_00404020) && (printf_sym == _DAT_00404020)) {
    if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {
                    // WARNING: Subroutine does not return
      __stack_chk_fail();
    }
    return;
  }
                    // WARNING: Subroutine does not return
  exit(-1);
}



void main(void)

{
  printf_sym = sym_lookup("printf");
  scanf_sym = sym_lookup("scanf");
  logo();
  do {
    basket();
  } while( true );
}


